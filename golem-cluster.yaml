cluster_name: golem-cluster

max_workers: 10 # The maximum number of workers the cluster will have at any given time
idle_timeout_minutes: 5 # The number of minutes that need to pass before an idle worker node is removed by the Autoscaler

provider:   # The cloud provider-specific configuration properties.
  type: "external"
  use_internal_ips: true
  module: "golem_ray.provider.node_provider.GolemNodeProvider"
  parameters:
    golem_ray_url: "http://localhost:8080" # Url of golem webserver that has connection with golem network
    image_hash: "9661a940881d2754887591b5ea4097f9c7124ce719b7eddea20a627f" # Hash of the image to run on nodes
    # 18d1abd97ade626e5657a7e194ac85be0037ebff31dc924114a28d0b - old # TODO: resolve before merging to main
    network: "goerli" # Golem network on which we will launch nodes
    budget: 10 # Maximum amount of GML that's going to be spent

file_mounts: # The files or directories to copy to the head and worker nodes
  {
    "~/ray_bootstrap_config.yaml": "~/ray_bootstrap_config.yaml"
#      "/tmp/golem": "/tmp/golem"
  }

available_node_types: # Tells the autoscaler the allowed node types and the resources they provide
  ray.head.default:
    min_workers: 0 # The minimum number of worker nodes of this type to launch
    max_workers: 1 # The maximum number of worker nodes of this type to launch
    resources: {"CPU": 1} # The node type's CPU and GPU resources
    node_config:
      kind: node
  ray.worker.default:
    min_workers: 3
    max_workers: 10
    resources: {"CPU": 1}
    node_config:
      kind: node

initialization_commands: [] # List of commands that will be run before `setup_commands`
setup_commands: [# List of shell commands to run to set up nodes
  "echo 'export BASE_URL=http://proxy.dev.golem.network:3010' >> ~/.bashrc"
]

head_setup_commands: [] # Custom commands that will be run on the head node after common setup.
worker_setup_commands: [] # Custom commands that will be run on worker nodes after common setup.

head_start_ray_commands: [ # Command to start ray on the head node. You don't need to change this.
  "ray start --node-ip-address 192.168.0.3 --head --dashboard-port 0.0.0.0 --dashboard-port 8266 --autoscaling-config=~/ray_bootstrap_config.yaml"
]
worker_start_ray_commands: [# Command to start ray on worker nodes. You don't need to change this.
  "ray start --address 192.168.0.3:6379 --dashboard-port 8266",
]
auth:  # Authentication credentials that Ray will use to launch nodes
  ssh_user: 'root'
  ssh_private_key: '~/.ssh/id_rsa'

cluster_synced_files: [] # A list of paths to the files or directories to copy from the head node to the worker nodes
